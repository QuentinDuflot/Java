#BlueJ class context
comment0.target=LagerDialog
comment1.params=
comment1.target=LagerDialog()
comment1.text=\r\n\ Standard-Konstruktor\ des\ Dialogs\r\n
comment10.params=in\ eingabeAufforderung
comment10.target=double\ readlnDouble(java.util.Scanner,\ java.lang.String)
comment10.text=\r\n\ gibt\ eine\ Eingabeaufforderungs-Text\ aus\ und\r\n\ liest\ aus\ einem\ Eingabestrom\ genau\ die\ erste\ Double-Zahl\r\n\ und\ ueberliest\ bis\ zum\ Zeilenende\ alle\ weiteren\ Zeichen\r\n\r\n\ \ @param\ \ in\ der\ zu\ lesende\ Eingabestrom\r\n\ \ @param\ \ eingabeAufforderung\ der\ Eingabe-Aufforderungs-Text\r\n\ \ @return\ die\ eingegebene\ Double-Zahl\r\n
comment11.params=in\ eingabeAufforderung
comment11.target=float\ readlnFloat(java.util.Scanner,\ java.lang.String)
comment11.text=\r\n\ gibt\ eine\ Eingabeaufforderungs-Text\ aus\ und\r\n\ liest\ aus\ einem\ Eingabestrom\ genau\ die\ erste\ Float-Zahl\r\n\ und\ ueberliest\ bis\ zum\ Zeilenende\ alle\ weiteren\ Zeichen\r\n\r\n\ \ @param\ \ in\ der\ zu\ lesende\ Eingabestrom\r\n\ \ @param\ \ eingabeAufforderung\ der\ Eingabe-Aufforderungs-Text\r\n\ \ @return\ die\ eingegebene\ Float-Zahl\r\n
comment12.params=in\ eingabeAufforderung
comment12.target=java.lang.String\ readlnString(java.util.Scanner,\ java.lang.String)
comment12.text=\r\n\ gibt\ eine\ Eingabeaufforderungs-Text\ aus\ und\r\n\ liest\ aus\ einem\ Eingabestrom\ die\ ganze\ Zeile\ als\ Zeichenkette\ (\ String\ )\r\n\ \ bis\ zum\ Zeilenende\r\n\r\n\ \ @param\ \ in\ der\ zu\ lesende\ Eingabestrom\r\n\ \ @param\ \ eingabeAufforderung\ der\ Eingabe-Aufforderungs-Text\r\n\ \ @return\ den\ eingegebenen\ String\ \=\=\ ganze\ Zeile\r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Hauptschleife\ des\ Testprogramms\r\n
comment3.params=
comment3.target=int\ einlesenFunktion()
comment3.text=\r\n\ Menue\ ausgeben\ und\ Funktion\ einlesen\r\n\ \r\n\ @return\ eingelesene\ Funktion\ als\ ganzzahliger\ Wert\r\n
comment4.params=funktion
comment4.target=void\ ausfuehrenFunktion(int)
comment4.text=\r\n\ Ausfuehren\ der\ ausgewaehlten\ Funktion\r\n\ \r\n\ @param\ die\ auszufuehrende\ Funktion\ als\ ganze\ Zahl\r\n
comment5.params=
comment5.target=void\ erzeugeLagerPosition()
comment5.text=\r\n\ \ Fragt\ den\ Benutzer\ die\ Daten\ fuer\ einen\ Artikel\r\n\ \ und\ steckt\ den\ Artikel\ in\ dem\ Lager\r\n
comment6.params=
comment6.target=int\ frageZugang()
comment6.text=\r\n\ fragt\ den\ Benutzer\ den\ Zugang\ fuer\ einen\ Artikel\r\n\ \r\n\ @return\ die\ Erhoehung-Zahl\r\n
comment7.params=
comment7.target=int\ frageAbgang()
comment7.text=\r\n\ fragt\ den\ Benutzer\ den\ Abgang\ fuer\ einen\ Artikel\r\n\ \r\n\ @return\ die\ Verminderung-Zahl\r\n
comment8.params=bedingung
comment8.target=void\ existiertLager(boolean)
comment8.text=\r\n\ Ueberpruft\ ob\ ein\ Lager\ schon\ existiert\r\n\ \r\n\ @param\ (boolean)bedingung\r\n
comment9.params=in\ eingabeAufforderung
comment9.target=int\ readlnInt(java.util.Scanner,\ java.lang.String)
comment9.text=\r\n\ gibt\ eine\ Eingabeaufforderungs-Text\ aus\ und\r\n\ liest\ aus\ einem\ Eingabestrom\ genau\ die\ erste\ Integer-Zahl\r\n\ und\ ueberliest\ bis\ zum\ Zeilenende\ alle\ weiteren\ Zeichen\r\n\r\n\ \ @param\ \ in\ der\ zu\ lesende\ Eingabestrom\r\n\ \ @param\ \ eingabeAufforderung\ der\ Eingabe-Aufforderungs-Text\r\n\ \ @return\ die\ eingegebene\ Integer-Zahl\r\n
numComments=13
