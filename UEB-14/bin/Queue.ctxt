#BlueJ class context
comment0.target=Queue
comment0.text=\r\n\ Eine\ Interface,\ die\ eine\ Queue\ beschreibt\r\n\r\n\ @author\ Quentin\ Duflot/\ Marie-Lou\ Wechsler\r\n\ @version\ 05/05/2019\r\n
comment1.params=o
comment1.target=void\ addLast(java.lang.Object)
comment1.text=\r\n\ fuegt\ ein\ Objekt\ am\ Ende\r\n\ unsere\ Queue\r\n\ \r\n\ @param\ o\ Das\ Objekt,\ das\ man\ hinzufuegen\ moechtet\r\n
comment2.params=
comment2.target=java.lang.Object\ removeFirst()
comment2.text=\r\n\ entferne\ das\ erste\ Element\ und\ gebe\ eine\r\n\ Referenz\ darauf\ zurueck\r\n\ \r\n\ @return\ gibt\ das\ entfernte\ Element\ zuruck\r\n
comment3.params=i
comment3.target=java.lang.Object\ get(int)
comment3.text=\r\n\ Das\ i-te\ Element\ zurueckgeben\r\n\ \r\n\ @param\ i\ Index\ des\ Objekts\r\n\ @return\ i-te\ Element\ des\ Queues\r\n
comment4.params=
comment4.target=boolean\ empty()
comment4.text=\r\n\ Testen,\ ob\ schon\ Elemente\ eingefuegt\ wurden\r\n\ \r\n\ @return\ true\ wenn\ es\ leer\ ist,\ sonst\ false\r\n
comment5.params=
comment5.target=boolean\ full()
comment5.text=\r\n\ Testen,\ ob\ noch\ Elemente\ einfuegbar\ sind,\r\n\ d.\ h.\ ob\ das\ letzte\ Element\ schon\ einen\ Wert\ \!\=\ null\ hat\r\n\ \r\n\ @return\ true\ wenn\ es\ voll\ ist,\ sonst\ false\r\n
comment6.params=
comment6.target=int\ size()
comment6.text=\r\n\ Anzahl\ eingefuegter\ Elemente\r\n\ \r\n\ @return\ Anzahl\ der\ Elemente\ in\ unsere\ Queue\r\n
comment7.params=
comment7.target=void\ print()
numComments=8
